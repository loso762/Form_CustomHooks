{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nconst useInput = validateValue => {\n  _s();\n  const [enteredValue, setenteredValue] = useState(\"\");\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid;\n  const valueChangeHandler = e => {\n    setenteredValue(e.target.value);\n  };\n  const BlurHandler = () => {};\n  const reset = () => {\n    setenteredValue(\"\");\n  };\n  return {\n    enteredValue,\n    valueChangeHandler,\n    InputIsValid,\n    BlurHandler,\n    reset\n  };\n};\n_s(useInput, \"VH5aYlFyj8VygQDymI7rSpPYqpk=\");\nexport default useInput;","map":{"version":3,"names":["React","useState","useInput","validateValue","_s","enteredValue","setenteredValue","valueIsValid","hasError","valueChangeHandler","e","target","value","BlurHandler","reset","InputIsValid"],"sources":["/Users/kihun/Desktop/연습/formPractice/src/hooks/use-Input.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setenteredValue] = useState(\"\");\n\n  const valueIsValid = validateValue(enteredValue);\n\n  const hasError = !valueIsValid;\n\n  const valueChangeHandler = (e) => {\n    setenteredValue(e.target.value);\n  };\n\n  const BlurHandler = () => {};\n\n  const reset = () => {\n    setenteredValue(\"\");\n  };\n\n  return {\n    enteredValue,\n    valueChangeHandler,\n    InputIsValid,\n    BlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMM,YAAY,GAAGJ,aAAa,CAACE,YAAY,CAAC;EAEhD,MAAMG,QAAQ,GAAG,CAACD,YAAY;EAE9B,MAAME,kBAAkB,GAAIC,CAAC,IAAK;IAChCJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAAC,CAAC;EAE5B,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBR,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,OAAO;IACLD,YAAY;IACZI,kBAAkB;IAClBM,YAAY;IACZF,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CAxBIF,QAAQ;AA0Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}